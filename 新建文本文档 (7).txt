#define  _CRT_SECURE_NO_WARNINGS 1 
#include<stdio.h>
#include<string.h>
#include<assert.h>
//int main()
//{
//	char arr[] = "zpw@biteddu.hptt";//[]里未标字符个数，则根据初始化来确定字符数组的大小，为7个，追加任意一个字符都将超过arr1最大所能容纳
//	
//	char* p = (char*)"@.";
//
//	char* ret = 0;
//	for (ret = strtok(arr, p);ret != NULL;ret = strtok(NULL, p))//ret很关键，ret是strtok的返回值，是切割下的字符串的首地址，每次使用完石头人痛苦函数后ret的值都会改变，所以要重新初始化strtok的值
//	{
//		printf("%s\n", ret);
//	}
//	return 0;//strtok函数的第一次使用，传参是首字符和p，后面使用传参是NULL和p，最后一次执行完的结果是null
//	/*ret= strtok(arr1,p );
//	printf("%s\n", ret);
//	
//	ret=strtok(NULL, p);
//	printf("%s\n", ret);
//
//	ret = strtok(NULL, p);
//	printf("%s\n", ret);
//
//	ret = strtok(NULL, p);
//	printf("%s", ret);*/
//	return 0;
//}
void* my_memmove(void* dest, const void* src, int num)
{
	if (dest > src)//从后向前拷贝
	{
		int i = 0;
		for (i = 0;i < num;i++)
		{
			*((char*)dest + num - i - 1) = *((char*)src + num - i - 1);
     	}
		
	}
	else if (dest < src)//从前向后拷贝
	{
		int j = 0;
		for (j = 0;j < num;j++)
		{
			*((char*)dest + j) = *((char*)src + j);
		}

	}
	return dest;
}


int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9 };
	int sz = sizeof arr / sizeof arr[0];
	my_memmove(arr , arr+ 2, 20);
	int i = 0;
	for (i = 0;i < sz;i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}