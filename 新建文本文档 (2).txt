#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
#include<string.h> 
//void reveverse(char* str)
//{
//    int len = strlen(str);
//    char* left = str;
//    char* right = str + len - 1;
//    while (left < right)
//    {
//        char tmp = *left;
//        *left = *right;
//        *right = tmp;
//        left++;
//        right--;
//    }
//}
//int main()
//{
//    char arr[1000] = { 0 };
//    scanf("%s",arr);
//    reveverse(arr);
//    printf("%s", arr);
//    return 0;
//
//}
//打印水仙花数
//了解什么叫水仙花数，每个位数上的位数次方的和为这个数本身，就是水仙花数
//10000以内的水仙花数i，位数为n（用除法求位数），计算每个位数的总位数次方，要拿出每个位置(用除和模)
//注意i是这个数本身，则在计算n和单独拿出来是不能改变i的值（用临时变量）
//开干
#include<math.h>
//int main()
//{	
//	int i = 0;
//	for (i = 100;i < 999;i++)
//	{
//		int count = 1;//注意设立变量的位置，起始值为0；
//		int tmp = i;
//		int sum = 0;
//		int n = 0;
//		while (tmp /= 10)
//		{
//			count++;
//		}
//		n = count;
//		int j = 0;
//		tmp = i;
//		while (tmp)//这里用for循环也可以
//		{
//			sum += pow(tmp % 10, n);
//			tmp /= 10;
//		}
//		if (sum == i)
//		{
//			printf("%d ", i);
//		}
//	}return 0;
//}
//喝汽水问题
//int main()
//{
//	int n,m, p = 0;
//	scanf("%d", &n);
//	p += n;
//	while (n >= 2)//n此时代表空瓶数
//	{		
//		m = n % 2 + n / 2;//空瓶数所能换到的汽水数喝完后的空瓶数＋没还完的空瓶
//		p += n / 2;//换的汽水数
//		n = m;//所有空瓶数
//	}
//	printf("%d", p);
//	return 0;
//}
//打印杨辉三角
//int main()
//{
//	int arr[10][10] = { 0 };
//	int i = 0;
//	int j = 0;
//	for (i = 0;i < 10;i++)
//	{
//		for (j = 0;j < i;j++)
//		{
//			if (j == 0)
//			{
//				arr[i][j] = 1;
//			}
//			if (i == j)
//			{
//				arr[i][j] = 1;
//			}
//			if (i >= 2 && j >= 1)
//			{
//				arr[i][j] = arr[i - 1][j] + arr[i - 1][j - 1];
//			}
//			
//			printf("%d ", arr[i][j]);
//		}printf("\n");
//	}
//	
//	return 0;
//}	
//左旋转字符串  
#include<assert.h>
void Swap(char* ful1, char* ful2, int width)
{
	int i;
	for (i = 0;i < width;i++)
	{
		int tmp = *ful1;
		*ful1 = *ful2;
		*ful2 = tmp;
		ful1++;
		ful2++;
	}
}

void revevrse(void* base, int sz, int width)
{
	int i, j;
	for (i = 0;i < sz - 1;i++)
	{
		for (j = 0;j < sz - 1 - i;j++)
		{
			Swap((char*)base + width * j, (char*)base + width * (j + 1), width);
		}

	}
}
void Rotate(char* arr, int k)
{
	assert(arr);//断言函数，防止指针为空
	int len = strlen(arr);
	assert(k <= len);
	revevrse(arr,k,1);//三步翻转法：先翻转左边，再翻转右边，最后翻转整体
	revevrse(arr+k,len-k,1);
	revevrse(arr,len,1);
}

int main()
{
	 char arr[] = { "abcdef" };
	 char arr2[] = {"abcdef"};
	 int k = 3;
	 Rotate(arr, k);
	 printf("%s %s", arr2,arr);
	 return 0;
}

//strncat(在一个字符串后追加另一个字符串的),strstr(找子字符串的)

//打印菱形
//int mian()
//{
//	int input = 0;
//	scanf("%d", &input);
//	int i, j = 0;
//	for (i = 0;i < input;i++)
//	{
//		for(j=0;j<)
//	}